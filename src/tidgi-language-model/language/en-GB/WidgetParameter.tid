title: $:/plugins/linonetwo/tidgi-language-model/language/en-GB/WidgetParameter

\define lingo-base() $:/plugins/linonetwo/tidgi-language-model/language/

Various optional parameters can also be added to customize the behavior.

|!Attributes |!Explanation |
|history |Fill in an tiddler title for persistent storage of chat logs |
|scroll |If yes, the conversation record can be scrolled up and down, but the height must be specified in the outer layer of the widget, refer to the [[sidebar|$:/plugins/linonetwo/tidgi-language-model/side-bar]] writing |
|component |DOM tag type for microware, default is div |
|className |Class name of the widget for custom styles |
|readonly |If it is readonly, no dialog input box will appear, and it will be used for display only with the history parameter. |
|systemMessage |System messages to customize the AI's behavior, such as "You are an experienced lawyer" |
|promptTemplate | <<lingo Configs/DefaultPromptTemplate/Description>> |

In addition, the following LLaMa parameters are supported:

[[$:/plugins/linonetwo/tidgi-language-model/docs/types/LLaMa]]

Its specific usage can check the [[official documentation|https://withcatai.github.io/node-llama-cpp/api/classes/LlamaModel]].

Now there is no multi-round dialogue, even in a micro-piece chat, but also a single round of dialogue, multi-round dialogue and so on the next version to engage.

!! Advance

If you nest your own action in the widget, you can get the result of the answer when the conversation is completed, which requires that you know how to write a widget that supports actions. The output is stored in the `output-text` variable.

At the same time, you can also catch bubbling events of the widget when the conversation completes, as well as global events, both using `addEventListener` and `$tw.hooks.addHook` (the event name is `tidgi-chat`) respectively. The following is the type definition of the event load.

{{$:/plugins/linonetwo/tidgi-language-model/readme/types/ChatCompletionEvent}}
